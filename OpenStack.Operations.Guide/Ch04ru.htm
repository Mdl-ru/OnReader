<html>
<head>
   <link rel="icon" href="/i/MdlLogo.gif" type="image/gif">
   <title>Глава 4. Вычислительные узлы. Руководство по эксплуатации OpenStack.</title>
   <meta name="Keywords" content="OpenStack, Cloud computing, Swift, RESTful, Object Storage, Ceph, CORS, CNAME lookup, Domain remap, Health check, Rate limiting, Bulk delete, Container qoutas, account qoutas, TempURL, Static Web, Form post, recon, Swift origin server, Bulk archive auto-extraction">
   <meta name="Description" content="Глава 4. Вычислительные узлы. Руководство по эксплуатации OpenStack.">
   <meta name="Robots" content="INDEX, FOLLOW">
   <meta name="Author" content="Module-Projects,Ltd">
   <meta name="Copyright" content="Copyright 1998..2014 Module-Projects,Ltd">
   <meta http-equiv="Pragma" content="no-cache">
<script language="javascript" src="/css/v.0/mdlcss.js"></script>
<style type="text/css" media="screen, print">@import url("i/global-20140610.css");</style>
<script language="javascript" src="http://www.mdl.ru/usd.js"></script>
	<script language="javascript" src="http://www.mdl.ru/js/common.js"></script>
	<script language="javascript" src="http://www.mdl.ru/Solutions/ABC.js"></script>
</head>
<body>

<table class="bg_White" width="1024" align="center" valign="top" border="0" cellpadding="0" cellspacing="0"><tbody>
<tr>
<td>
<table width="100%" border="0" cellpadding="2" cellspacing=0 class="bg_White"><tbody>
<tr>
<td width="150" valign="top" align="center"><img src="http://www.mdl.ru/RMC9.jpg" border=0 /></td>
<td width="724" valign="bottom" align="center">
<a class="item-t" href="http://www.mdl.ru"><img src="http://www.mdl.ru/i/MdlBigLogo.gif" border="0"></a><br/>
<a class="item-t" href="http://www.mdl.ru">С 1991 года на компьютерном рынке России</a>
</td>
<td align="center" valign="bottom">
<a class="item-t" href="javascript:tocall()" onmouseover="this.href=mail"><img src="http://www.mdl.ru/i/9563499.gif" border="0" alt="e-mail" /><br/><br/>т.: 676 0965, 676 0396<br/>Москва, Сосинская ул. 43, <br/>м. Волгоградский проспект</a>
</td>
</tr>
<tr>
<td class="big_16y" colspan="3" align="center"><a href="index.htm">Руководство по эксплуатации OpenStack</a></td>
</tr>
<tr><td colspan="2">


<h2 align="right">ГЛАВА 4</h2>
<hr />
<h1 id="Chapter_04" align="right">Вычислительные узлы</h1>

<em>Пользуйтесь переводом <strong>существенно переработанной и дополенной <a href="http://onreader.mdl.ru/openstack-ops/content/compute_nodes.html">2й редакции</a></strong> (12-дек-2014),<br />
находящейся теперь и в режиме <a href="http://docs.openstack.org/openstack-ops/content/compute_nodes.html">постоянно обновляемой документации</a> <br />
(последняя пока доступна только на англ.яз.).</em><br />
<p></p>

<p>Вычислительные узлы образуют ядро ресурсов облака OpenStack Compute, предоставляя для запуска 
экземпляров процессоры, память, сетевые ресурсы и ресурсы систем хранения.</p>

<h2 id="Ch0401">Выбор процессора</h2>

<p>Выбор типа процессора в вашем вычислительном узле является очень важным.
 Для начала убедитесь, что процессор поддерживает виртуализацию посредством <em>VT-x</em> чипов Intel, 
 или <em>AMD-v</em> для чипов AMD.</p>

<p>На ваше решение также влияет число ядер в процессоре.
Для современных процессоров обычным является наличие до 12 ядер.
Кроме того, если процессор поддерживает технологию Hyper-threading, эти 12 ядер удваиваются до 24 ядер 
(<em>прим. перев.: корректнее, аппаратных потоков</em>).
Если вы приобретаете сервер, поддерживающий несколько процессоров, количество ядер еще умножается.</p>

<p>Следует или нет применять многопоточность (Hyper-threading) на ваших процессорах, зависит от ваших 
приложений.
 Мы рекомендуем провести тестирование с вашей локальной нагрузкой с включенной и выключенной 
 многопоточностью, чтобы определить что больше подходит в вашем случае.</p>

<h2 id="Ch0402">Выбор гипервизора</h2>

<p>OpenStack Compute поддерживает множество гипервизоров для различных уровней, в том числе 
<span class="red-heading">KVM</span>, <span class="red-heading">LXC</span>, 
<span class="red-heading">QEMU</span>, <span class="red-heading">UML</span>, 
<span class="red-heading">VMWare ESX/ESXi</span>, <span class="red-heading">Xen</span>, 
<span class="red-heading">PowerVM</span>, <span class="red-heading">Hyper-V</span>.</p>

<p>Вероятно, наиболее важным фактором при вашем выборе гипервизора будет текущая практика использования 
или опыта.
 Кроме того, существуют практические соображения обойтись свойствами соответствия, документированности 
 и уровня компетентности сообщества.</p>

<p>Например, KVM является наиболее часто используемым гипервизором в сообществе OpenStack.
 Помимо KVM, многие существующие реализации чаще чем с остальными перечисленными работают с Xen, 
 LXC, VMWare и Hyper-V — однако, каждому из них не хватает некоторых функций поддержки или устарела 
 документация об их использовании с OpenStack.</p>

<p>Наилучшая информация для поддержки вашего выбора может быть найдена в 
<span class="red-heading">матрице поддержки гипервизоров</span> 
(<a href="https://wiki.openstack.org/wiki/HypervisorSupportMatrix">
https://wiki.openstack.org/wiki/HypervisorSupportMatrix</a>), а также в 
<span class="red-heading">справочнике конфигурации</span> 
(<a href="http://docs.openstack.org/trunk/config-reference/content/section_compute-hypervisors.html">
http://docs.openstack.org/trunk/config-reference/content/section_compute-hypervisors.html</a>).</p>

<p><img src="i/Tip.jpg" alt="Tip" /> Кроме того возможен запуск нескольких гипервизоров в одной 
реализации с использованием Объединения хостов (Host Aggregates) или Ячеек (Cells).
 Тем не менее, на отдельном вычислительном узле в одно и тоже время может работать только один 
 гипервизор.</p>

<h2 id="Ch0403">Решения хранилищ экземпляра</h2>

<p>В рамках закупки для вычислительного кластера вам необходимо задать технические требования для 
некоторой системы хранения для дисков, на которых работает установленный экземпляр.
Существует три основных подхода предоставления такого хранилища временного типа и очень важно понимать 
последствия вашего выбора.</p>
 
<p>Это подходы</p>
<ul>
  <li>Система хранения вне вычислительного узла – совместно используемая файловая система
  <li>Система хранения на вычислительном узле – совместно используемая файловая система
  <li>Система хранения на вычислительном узле – не разделяемая файловая система
</ul>

<p>В общем случае, вопросы на которые вы должны ответить при выборе СХД будут следующими:</p>
<ul>
  <li>Какое количество дисковых пластин вы хотите получить?
  <li>Можно ли получить лучшую производительность ввода/вывода добавляя шпиндели при неизменной сетевой 
  структуре?
  <li>К какому результату с лучшим соотношением стоимость-производительность вы стремитесь?
  <li>Как вы оперативно управляете системой хранения?
</ul>

<h3 id="Ch040301">Система хранения вне вычислительного узла – совместно используемая файловая система</h3>
<p>Многие операторы используют раздельные хосты для вычислений и для хранения.
 Вычислительные службы и услуги хранения имеют различные требования, вычислительные хосты обычно требуют 
 больше процессоров и памяти, чем хосты хранения.
 Таким образом при фиксированном бюджете есть смысл иметь различные конфигурации для ваших вычислительных 
 узлов и ваших узлов хранения, при основных вложениях в процессоры и память на вычислительных узлах и 
 главных затратах на компоненты СХД на узлах хранения.</p>

<p>Кроме того, когда вы используете раздельные хосты вычисления и хранения, вы можете рассматривать ваши 
вычислительные узлы как &quot;не запоминающие состояние&quot;.
 Это упрощает обслуживание вычислительных хостов.
 Если на вычислительном хосте у вас нет работающего в настоящий момент экземпляра, вы можете использовать 
 его в автономном режиме или полностью очистить, что не окажет никакого влияния на оставшуюся часть вашего 
 облака.</p>

<p>Однако, если вы более ограничены в количестве имеющихся у вас в наличии физических хостов для создания 
вашего облака и вы хотите иметь возможность выделять работающим экземплярам все имеющиеся в вашем 
распоряжении хосты, имеет смысл запускать вычислительные хосты и хосты хранения на 
одинаковых компьютерах.</p>

<p>В этом случае диски для хранения работающих экземпляров размещаются на серверах за пределами 
вычислительных узлов.
 Существует ряд преимуществ такого подхода:</p>
<ul>
  <li>При выходе из строя вычислительных узлов экземпляры обычно легко восстанавливаются
  <li>Работа выделенной системы хранения может быть проще в эксплуатации
  <li>возможность масштабирования на любое количество шпинделей
  <li>Становится возможным совместно использовать внешние накопители для других целей
</ul>

<p>Основные недостатки такого подхода:</p>
<ul>
  <li>В зависимости от конструкции, интенсивное использование ввода/вывода может приводить к несвязности 
  экземпляров.
  <li>Использование сети может приводить к снижению производительности
</ul>

<h3 id="Ch040302">Система хранения на вычислительном узле – совместно используемая файловая система</h3>
<p>При данном выборе, каждый <code>nova-compute</code> узел имеет достаточное количество дисков, однако 
распределенная файловая система связывает диски всех вычислительных узлов в единое монтирование.
Основным преимуществом данного подхода заключается в том, что он масштабируется на внешние системы 
хранения по мере запросов на дополнительное пространство хранения.</p>
<p>Однако, данная система имеет ряд негативных моментов:</p>
<ul>
  <li>Запуск распределенной файловой системы может заставить вас утратить локальность данных по сравнению 
  с не разделяемым хранилищем.
  <li>Восстановление экземпляров усложняется из- за зависимости от множества хостов.
  <li>Физические размеры шасси вычислительного узла могут ограничивать количество шпинделей, доступное 
  в вычислительном узле.
  <li>Использование сети может привести к снижению производительности.
</ul>

<h3 id="Ch040303">Система хранения на вычислительном узле – не разделяемая файловая система</h3>
<p>В данном случае каждый <code>nova-compute</code> узел снабжается достаточным количеством дисков для 
хранения экземпляров своих хостов.
Существует две основные причины, почему это является хорошей идеей:</p>
<ul>
  <li>Использование интенсивной нагрузки ввода/вывода на одном вычислительном узле не влияет на экземпляры 
  на других вычислительных узлах. 
  <li>Ввод/вывод с пямым доступом может повысить производительность.
</ul>

<p>Он также имеет недостатки:</p>
<ul>
  <li>В случае отказа данного узла, работающие на нем экземпляры утрачиваются.
  <li>Физические размеры шасси вычислительного узла могут ограничивать количество шпинделей, доступное в 
  вычислительном узле.
  <li>Миграция экземпляров с одного узла на другой является более сложной и может быть основана на функциях, 
  которые могут не получить поддержки в дальнейших разработках. 
  <li>В случае потребности в дополнительном пространстве хранения, данное решение не является 
  масштабируемым.
</ul>

<h3 id="Ch040304">Проблемы миграции в реальном масштабе времени</h3>
<p>Мы рассматриваем миграцию в реальном масштабе времени неотъемлемой частью деятельности облака.
 Эта функция обеспечивает возможность экземплярам беспрепятственно передвигаться с одного хоста на другой, 
 необходимость выполнения для требующих перезагрузки на хосте обновлений, однако хорошо работает только с 
 совместно используемой системой хранения.</p>

<p>Миграция в реальном масштабе времени может быть выполнена и при использовании не разделяемых хранилищ 
с использованием функции, известной как миграция динамических блоков KVM (<em>KVM live block migration</em>).
 Хотя ранее реализация блочной миграции KVM и QEMU считалась ненадежной, существуют более новые, 
 более надежные реализации блочной миграции в реальном режиме времени, такие как QEMU 1.4 и 
 libvirt 1.0.2, которые, к тому же, совместимы с OpenStack.
 Тем не менее, ни один из авторов данного руководства не имеет опыта первых рук использования блочной 
 миграции в реальном времени.</p>

<h3 id="Ch040305">Выбор файловой системы</h3>
<p>Если вы хотите поддерживать миграцию в реальном времени на совместно используемой системе хранения, 
вам необходимо настроить распределенную файловую систему.</p>
<p>Возможные варианты включают:</p>
<ul>
  <li>NFS (система по умолчанию для Linux)
  <li>ClusterFS
  <li>MooseFS
  <li>Lustre
  <li><em>Прим. перев.: GPFS,<br /> см. <a href="http://www.mdl.ru/Solutions/Put.htm?Nme=GPFS">
  http://www.mdl.ru/Solutions/Put.htm?Nme=GPFS</a>, например, подробности во врезке 
  &quot;Сосредоточение внимания на OpenStack&quot; в книге &quot;Определяемые программным 
  обеспечением системы хранения `для чайников`&quot;.</em>
</ul>

<p>Нам знакомо применение всех этих систем и мы рекомендуем вам  выбрать ту, с которой у вас есть 
наибольший практический опыт.</p>

<h2 id="Ch0404">Перегруженное выделение</h2>
<p>OpenStack позволяет перерасход (overcommit) процессоров и памяти на вычислительных узлах.
 Это позволяет вам увеличить количество экземпляров, которое вы можете иметь работающими в вашем 
 облаке за счет снижения производительности этих экземпляров.
 OpenStack Compute использует следующие коэффициенты по умолчанию:</p>

<ul>
  <li>Отношение выделения процессоров: 16
  <li>Отношение выделения памяти: 1.5
</ul>

<p>Коэффициент выделения процессоров по умолчанию 16 означает, что планировщик распределяет до 16 
виртуальных ядер на узле для физического ядра.
 Например, если физический узел имеет 12 ядер, планировщик выделяет до 192 виртуальных ядер для 
 экземпляров (например, если каждый экземпляр имеет 4 виртуальных ядра, будет запущено 48 экземпляров).</p>

<p>Точно так же, значение по умолчанию, равное 1.5, для коэффициента выделения памяти означает, что 
планировщик распределяет экземпляры в физическом узле, пока общее количество оперативной памяти, 
связанной с экземплярами меньше чем 3/2 объема оперативной памяти, доступной на физическом узле.</p>

<p>Например, если физический узел имеет 48ГБ оперативной памяти, планировщик распределяет экземпляры 
на этом узле, пока сумма ОЗУ, связанного с этими экземплярами не достигнет 72ГБ (например, девять, 
когда каждый экземпляр имеет 8ГБ ОЗУ).</p>

<p>Вы должны выбрать надлежащее значения коэффициента выделения процессоров и памяти для вашего 
конкретного случая.</p>

<h2 id="Ch0405">Ведение журнала</h2>

<p>Журналирование более подробно описано в <a class="red-heading" href="Ch13ru.htm">главе под 
названием &quot;Ведение журнала&quot;</a>.
Однако важно принять во внимание анализ проекта до начала эксплуатации вашего облака.</p>

<p>OpenStack порождает много полезной регистрационной информации, однако, для того, чтобы она стала полезной для целей эксплуатации вы должны рассмотреть возможность наличия центрального сервера журналирования, чтобы отправлять туда журналы, а также систему разбора/анализа журналов (например, logstash).</p>

<h2 id="Ch0406">Сетевое обеспечение</h2>
<p>Сеть в OpenStack является сложной, многогранной проблемой. См. 
<a class="red-heading" href="Ch06ru.htm">Главу 6.</a></p>

<table width="100%" border="0" cellpadding="2" cellspacing=0 class="bg_White"><tbody><tr>
 <td align="left"><a href="Ch03ru.htm">Глава 3</a></td>
 <td align="center"><a href="index.htm">Оглавление</a></td>
 <td align="right"><a href="Ch05ru.htm">Глава 5</a></td>
</tr><tr><td colspan="3" style="border-bottom: thin solid;">&nbsp;</tr>
<tr><td colspan="2" valign="top">Перевод: Copyright ©&nbsp;2014 &nbsp;<img src="/i/mdl-reg.jpg" widht="35" height="12" style="border-style: none;">.<br>
All rights reserved.<br />
Ссылки обязательны (Refs and links obligatory).</td>
<td valign="top" align="right"><em><a href="http://www.mdl.ru">http://www.mdl.ru</a></em></td></tr>
</tbody></table>


<td align="right" valign="top">
<script language="javascript">
WriteABC('GPFS');
//--></script>
</tr>
</tbody></table>
</tbody></table>
</body>
</html>
